// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Featured should resemble the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Featured />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="featured-box"
        >
          <Channels
            channelName="tech"
            channelString="new in tech, today"
            type="tech"
          />
          <Channels
            channelName="memes"
            channelString="fortnite floss, kids falling over, the works"
            type="memes"
          />
          <Channels
            channelName="abramov"
            channelString="whatever dan says"
            type="abramov"
          />
          <Channels
            channelName="culture"
            channelString="learn some things"
            type="culture"
          />
          <Channels
            channelName="top news"
            channelString="for when you want to be sad"
            type="top"
          />
        </div>,
        <p
          className="scroll-text"
        >
          scroll
        </p>,
      ],
      "className": "featured-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Channels
              channelName="tech"
              channelString="new in tech, today"
              type="tech"
            />,
            <Channels
              channelName="memes"
              channelString="fortnite floss, kids falling over, the works"
              type="memes"
            />,
            <Channels
              channelName="abramov"
              channelString="whatever dan says"
              type="abramov"
            />,
            <Channels
              channelName="culture"
              channelString="learn some things"
              type="culture"
            />,
            <Channels
              channelName="top news"
              channelString="for when you want to be sad"
              type="top"
            />,
          ],
          "className": "featured-box",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "channelName": "tech",
              "channelString": "new in tech, today",
              "handleNews": undefined,
              "type": "tech",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "channelName": "memes",
              "channelString": "fortnite floss, kids falling over, the works",
              "handleNews": undefined,
              "type": "memes",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "channelName": "abramov",
              "channelString": "whatever dan says",
              "handleNews": undefined,
              "type": "abramov",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "channelName": "culture",
              "channelString": "learn some things",
              "handleNews": undefined,
              "type": "culture",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "channelName": "top news",
              "channelString": "for when you want to be sad",
              "handleNews": undefined,
              "type": "top",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "scroll",
          "className": "scroll-text",
        },
        "ref": null,
        "rendered": "scroll",
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="featured-box"
          >
            <Channels
              channelName="tech"
              channelString="new in tech, today"
              type="tech"
            />
            <Channels
              channelName="memes"
              channelString="fortnite floss, kids falling over, the works"
              type="memes"
            />
            <Channels
              channelName="abramov"
              channelString="whatever dan says"
              type="abramov"
            />
            <Channels
              channelName="culture"
              channelString="learn some things"
              type="culture"
            />
            <Channels
              channelName="top news"
              channelString="for when you want to be sad"
              type="top"
            />
          </div>,
          <p
            className="scroll-text"
          >
            scroll
          </p>,
        ],
        "className": "featured-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Channels
                channelName="tech"
                channelString="new in tech, today"
                type="tech"
              />,
              <Channels
                channelName="memes"
                channelString="fortnite floss, kids falling over, the works"
                type="memes"
              />,
              <Channels
                channelName="abramov"
                channelString="whatever dan says"
                type="abramov"
              />,
              <Channels
                channelName="culture"
                channelString="learn some things"
                type="culture"
              />,
              <Channels
                channelName="top news"
                channelString="for when you want to be sad"
                type="top"
              />,
            ],
            "className": "featured-box",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "channelName": "tech",
                "channelString": "new in tech, today",
                "handleNews": undefined,
                "type": "tech",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "channelName": "memes",
                "channelString": "fortnite floss, kids falling over, the works",
                "handleNews": undefined,
                "type": "memes",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "channelName": "abramov",
                "channelString": "whatever dan says",
                "handleNews": undefined,
                "type": "abramov",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "channelName": "culture",
                "channelString": "learn some things",
                "handleNews": undefined,
                "type": "culture",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "channelName": "top news",
                "channelString": "for when you want to be sad",
                "handleNews": undefined,
                "type": "top",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "scroll",
            "className": "scroll-text",
          },
          "ref": null,
          "rendered": "scroll",
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
